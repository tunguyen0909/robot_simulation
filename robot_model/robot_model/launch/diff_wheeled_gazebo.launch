<?xml version="1.0" ?>
<launch>

  <!-- Thay đổi model xe (Chỉ cần thay tên thôi nhé) -->
  <arg name="model" default="$(find robot_model)/urdf/lumibot_model.xacro"/>
  <arg name="rvizconfig" default="$(find robot_model)/rviz/navigation.rviz" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">

    <!--<arg name="world_name" value="$(find robot_model)/worlds/cafe.world"/>-->
    <arg name="world_name" value="$(find robot_model)/worlds/demo_7.world"/> 

    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>


  <!-- urdf xml robot description loaded on the Parameter Server-->  

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" /> 

  <!-- joiny state publisher for control robot -->

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 


  <!-- Robot state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!--<node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />-->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model robot_model -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description"/> 

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />



</launch>
