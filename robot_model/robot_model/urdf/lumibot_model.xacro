<?xml version="1.0"?>
<robot name="robot_model" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:include filename="$(find robot_model)/urdf/wheel.urdf.xacro" />
    <xacro:include filename="$(find robot_model)/urdf/side_wheel.urdf.xacro" />
    <!-- <Defining the colors used in robot> -->
    <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
    </material>

    <material name="Red">
        <color rgba="0.8 0.0 0.0 1.0"/>
    </material>

    <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
    </material>


    <material name="Blue">
        <color rgba="0.0 0.0 0.8 1.0"/>
    </material>

    <!-- radians unit system -->
    <xacro:property name="M_PI" value="3.1415926535897931" /> 
    <xacro:property name="M_PI_2" value="1.570796327" />
    <xacro:property name="DEG_TO_RAD" value="0.017453293" />


    <!-- Wheels -->

    <xacro:property name="wheel_mass" value="2.5" />  <!-- in kg-->
    <xacro:property name="wheel_radius" value="0.0475" />

    <!-- main body -->
    <xacro:property name="base_depth" value="0.20" />
        <!--chieu rong - y  -->
    <xacro:property name="base_width" value="0.32" /> 
    <!-- chieu dai - x -->
    <xacro:property name="base_height" value="0.32" />
    <xacro:property name="base_mass" value="30" /> <!-- in kg-->





    <!-- Hokuyo Laser scanner -->
    <xacro:property name="hokuyo_size" value="0.05" /> 

    <!-- <xacro:property name="base_x_origin_to_wheel_origin" value="0.2" />
    <xacro:property name="base_y_origin_to_wheel_origin" value="0.1" />
    <xacro:property name="base_z_origin_to_wheel_origin" value="0.025" /> -->

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
    </xacro:macro>

   
    <xacro:macro name="box_inertia" params="m w h d">
        <inertia  ixx="${(m*(h*h + d*d))/12}" ixy = "0" ixz = "0"
                iyy="${(m*(w*w + d*d))/12}" iyz = "0"
                izz="${(m*(w*w + h*h))/12}" /> 
    </xacro:macro>

    <link name="base_footprint">
        <inertial>
            <mass value="0.0001" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                iyy="0.0001" iyz="0.0" 
                izz="0.0001" />
        </inertial>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>

    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0.0 0.0 ${wheel_radius}" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>

    <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <!-- base link defination -->
    <link name="base_link">
        <visual>
            <origin xyz="0.095 0.0 0.12"/>
            <geometry>
                <box size="${base_height} ${base_width} ${base_depth}"/>
            </geometry>
            <material name="Blue"/>
        </visual>

        <inertial>
            <mass value="${base_mass}"/>
            <origin xyz="0.095 0.0 0.07"/>
            <box_inertia m = "${base_mass}" w = "${base_width}" h = "${base_height}" d = "${base_depth}"/>
            
        </inertial>

        <collision>
            <origin xyz="0.095 0.0 0.07"/>
            <geometry>
                <box size="${base_height} ${base_width} ${base_depth}"/>
            </geometry>
            <material name="Blue"/>
        </collision>
        
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Blue</material>
        <turnGravityOff>false</turnGravityOff>
    </gazebo>


    <!-- Wheel defination -->
    <wheel lr="right" parent="base_link" translateX="1" translateY="-1" flipY="1"/>
    <wheel lr="left" parent="base_link" translateX="1" translateY="1" flipY="-1"/>
    <!-- <wheel fb="back" lr="right" parent="base_link" translateX="-1" translateY="-1" flipY="1"/>
    <wheel fb="back" lr="left" parent="base_link" translateX="-1" translateY="1" flipY="-1"/> -->


    <!-- Castle Wheel -->
    <side_wheel fb = "font" parent="base_link" translateX="1" translateY="1"/>
    <!-- <side_wheel fb = "back" parent="base_link" translateX="-1" translateY="1"/> -->



    <!-- IMU -->
    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
    </joint>

    <link name="imu_link"/>

    <gazebo reference="imu_link">
        <sensor type="imu" name="imu">
        <always_on>true</always_on>
        <visualize>false</visualize>
        </sensor>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <bodyName>imu_link</bodyName>
            <frameName>imu_link</frameName>
            <topicName>imu</topicName>
            <serviceName>imu_service</serviceName>
            <gaussianNoise>0.0</gaussianNoise>
            <updateRate>0</updateRate>
            <imu>
                <noise>
                <type>gaussian</type>
                <rate>
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    <bias_mean>0.0000075</bias_mean>
                    <bias_stddev>0.0000008</bias_stddev>
                </rate>
                <accel>
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    <bias_mean>0.1</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                </accel>
                </noise>
            </imu>
        </plugin>
    </gazebo>



 

    <!-- Definition Laser -->
    <link name="hokuyo_link">
        <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="${hokuyo_size} ${hokuyo_size} ${hokuyo_size}"/>
        </geometry>
        <material name="Blue" />
        </visual>
    </link>

    <joint name="hokuyo_joint" type="fixed">
       <!-- <origin xyz="${base_height/2 - hokuyo_size/2 + 0.095}  0 ${base_depth + hokuyo_size/2 + 0.02}" rpy="0 0 -${M_PI_2}" />-->
        <origin xyz="${base_height/2 - hokuyo_size/2 + 0.095}  0 ${base_depth + hokuyo_size/2 + 0.02}" rpy="0 0 0" />
        <parent link="base_link"/>
        <child link="hokuyo_link" />
    </joint>

    <gazebo reference="hokuyo_link">
        <material>Gazebo/Blue</material>
        <turnGravityOff>false</turnGravityOff>
        <sensor type="ray" name="head_hokuyo_sensor">
        <pose>${hokuyo_size/2} 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
            <scan>
            <horizontal>
                <samples>720</samples>
                <resolution>1</resolution>
                <min_angle>-1.570796</min_angle>
                <max_angle>1.570796</max_angle>
            </horizontal>
            </scan>
            <range>
            <min>0.10</min>
            <max>10.0</max>
            <resolution>0.001</resolution>
            </range>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>/base_scan</topicName>
            <frameName>hokuyo_link</frameName>
        </plugin>
        </sensor>
    </gazebo>

    <!-- Gazebo Plug in -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <legacyMode>true</legacyMode>
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>false</publishWheelTF>
            <robotNamespace>/</robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>false</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>

            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
          

            <wheelSeparation>${base_width + wheel_depth}</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>

            <broadcastTF>1</broadcastTF>
            <wheelTorque>10</wheelTorque>
            <wheelAcceleration>1</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame> 
            <odometryTopic>raw_odom</odometryTopic> 
            <robotBaseFrame>base_footprint</robotBaseFrame>


        </plugin>
    </gazebo> 
    
</robot>
